!function (t) { t.widget("custom.combobox", { _create: function () { this.wrapper = t("<span>").addClass("custom-combobox").insertAfter(this.element), this.element.hide(), this._createAutocomplete(), this._createShowAllButton() }, _createAutocomplete: function () { var e, i = this.element.children(":selected"), o = i.val() ? i.text() : ""; e = this.input = t("<input>").appendTo(this.wrapper).val(o).attr("title", "").addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left").autocomplete({ autoFocus: !0, delay: 0, minLength: 0, source: t.proxy(this, "_source") }).tooltip({ tooltipClass: "ui-state-highlight" }), this.input.data("uiAutocomplete")._renderItem = function (e, i) { return t("<li>").attr({ "data-value": i.value, class: i.option.className }).append(t("<a>").text(i.label)).appendTo(e) }, this.element.change(function () { e.val(t("option:selected", this).text()) }), this._on(this.input, { click: function () { this.input.val("") }, autocompleteselect: function (t, e) { e.item.option.selected = !0, this._trigger("select", t, { item: e.item.option }), this.element.change() }, autocompletechange: "_removeIfInvalid" }) }, _createShowAllButton: function () { var e = this.input, i = !1; t("<a>").attr("tabIndex", -1).appendTo(this.wrapper).button({ icons: { primary: "ui-icon-triangle-1-s" }, text: !1 }).removeClass("ui-corner-all").addClass("custom-combobox-toggle ui-corner-right").mousedown(function () { i = e.autocomplete("widget").is(":visible") }).click(function () { e.focus(), i || e.autocomplete("search", "") }) }, _source: function (e, i) { var o = new RegExp(t.ui.autocomplete.escapeRegex(e.term), "i"); i(this.element.children("option").map(function () { var i = t(this).text(); if (this.value && (!e.term || o.test(i))) return { label: i, value: i, option: this } })) }, _removeIfInvalid: function (e, i) { if (!i.item) { var o = this.input.val(), n = o.toLowerCase(), a = !1; this.element.children("option").each(function () { if (t(this).text().toLowerCase() === n) return this.selected = a = !0, !1 }), a || (this.input.val("").attr("title", o + " didn't match any item").tooltip("open"), this.element.val(""), this._delay(function () { this.input.tooltip("close").attr("title", "") }, 2500), this.input.data("ui-autocomplete").term = "") } }, _destroy: function () { this.wrapper.remove(), this.element.show() } }) }(jQuery);